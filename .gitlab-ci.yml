services:
  - docker:18-dind

variables:
  SERVICE: $CI_PROJECT_NAME
  REGISTRY: registry.gitlab.com/$CI_PROJECT_NAMESPACE/$CI_PROJECT_NAME
  IMAGE_NAME: $REGISTRY:$CI_COMMIT_SHA
  DH_IMAGE_NAME: $CI_PROJECT_ROOT_NAMESPACE/$CI_PROJECT_NAME
  WERF_STAGES_STORAGE: ":local"
  WERF_LOG_COLOR_MODE: "on"
  WERF_IMAGES_REPO: $CI_REGISTRY_IMAGE
  #WERF_USE_CUSTOM_TAG: $CI_COMMIT_SHA
  #WERF_ADD_CUSTOM_TAG: $CI_COMMIT_SHA
  #WERF_TAG_GIT_COMMIT: $CI_COMMIT_TAG
  #WERF_INSECURE_REGISTRY: "false"

.before_script_template: &before_script_templ
  before_script:
    - |
      raw='configVersion: 1
      \nproject: '$CI_PROJECT_NAME'
      \n---
      \nimage: '$CI_PROJECT_NAME'
      \ndockerfile: ./Dockerfile'
    - echo -e $raw > werf.yaml
    - |
      cat >> werf-giterminism.yaml << 'END'
      giterminismConfigVersion: 1
      cli:
        allowCustomTags: true
      END
    - werf version
    - docker version
    - echo $CI_REGISTRY
    - echo $CI_REGISTRY_USER
    - echo $CI_REGISTRY_PASSWORD
    - echo $WERF_IMAGES_REPO
    - echo $WERF_ADD_CUSTOM_TAG_1

stages:
  - build-and-publish
  - docs
  - code-review
  - deploy
  - dismiss
  - cleanup

Build and Publish:
  stage: build-and-publish
  tags:
    - tokend
  image:
    name: "registry.gitlab.com/tokend/devops/werf-dind:1a7ff15973f6624280eac8f3d65a89fde0800e87"
    entrypoint: [""]
  variables:
    #WERF_ADD_CUSTOM_TAG: $CI_COMMIT_SHA
    WERF_ADD_CUSTOM_TAG_1: $CI_COMMIT_SHA
  <<: *before_script_templ
  script:
    #- echo $CI_REGISTRY_PASSWORD | docker login -u $CI_REGISTRY_USER $CI_REGISTRY --password-stdin
    - type multiwerf && . $(multiwerf use 1.1 stable --as-file)
    - type werf && source $(werf ci-env gitlab --as-file)
    - werf build --dev
  except: [schedules]


Build and Publish Tag:
  stage: build-and-publish
  tags:
    - tokend
  only:
    - tags
  image:
    name: "registry.gitlab.com/tokend/devops/werf-dind:1a7ff15973f6624280eac8f3d65a89fde0800e87"
    entrypoint: [""]
  variables:
    #WERF_ADD_CUSTOM_TAG: $CI_COMMIT_TAG
    WERF_ADD_CUSTOM_TAG_1: $CI_COMMIT_TAG
  <<: *before_script_templ
  script:
    #- echo $CI_REGISTRY_PASSWORD | docker login -u $CI_REGISTRY_USER $CI_REGISTRY --password-stdin
    - type multiwerf && . $(multiwerf use 1.1 stable --as-file)
    - type werf && source $(werf ci-env gitlab --as-file)
    - werf build --dev
  except: [schedules]

pages:
  image: node:8
  stage: docs
  tags:
    - tokend
  when: manual
  script:
    - cd docs
    - npm install
    - mkdir -p ../public
    - npm run release-build
  artifacts:
    paths:
      - public

